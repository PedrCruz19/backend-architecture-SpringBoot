<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.3</version>
	</parent>
	<groupId>org.pedrcruz</groupId>
	<artifactId>backendarhc</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>backendarhc</name>
	<description>REST API for backendarch</description>
	<properties>
		<maven.compiler.release>23</maven.compiler.release>

		<!-- automatically run annotation processors within the incremental
        compilation -->
		<m2e.apt.activation>jdt_apt</m2e.apt.activation>

		<sonar.jacoco.reportPaths>target/jacoco.exec</sonar.jacoco.reportPaths>
		<sonar.exclusions>src/main/java/**/*/package-info.java</sonar.exclusions>

		<downloadSources>true</downloadSources>
		<downloadJavadocs>true</downloadJavadocs>

		<!-- version property for release from Jitpack.io -->
		<eapli.framework.core.version>v24.1.0_RELEASE</eapli.framework.core.version>
		<!-- version property for local nexus repository for development -->
		<eapli.framework.core.version-snapshot>25.0.0</eapli.framework.core.version-snapshot>
		<maven.compiler.source>23</maven.compiler.source>
		<maven.compiler.target>23</maven.compiler.target>
	</properties>
	<dependencies>
		<!-- EAPLI framework -->
		<!-- FRAMEWORK dependencies from Jitpack nexus repository -->
		<!-- -->
		<dependency>
			<groupId>org.bitbucket.pag_isep.eapliframework</groupId>
			<artifactId>eapli.framework.core</artifactId>
			<version>${eapli.framework.core.version}</version>
		</dependency>
		<!-- -->
		<!-- FRAMEWORK dependencies for local debug -->
		<!--
		<dependency>
			<groupId>eapli</groupId>
			<artifactId>eapli.framework.core</artifactId>
			<version>${eapli.framework.core.version-snapshot}</version>
		</dependency>	
		-->

		<!-- Spring framework -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- database drivers -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<!-- security, authentication & authorization -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>
		<!-- Lombok to automate setter/getter generation -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- OpenAPI & Swagger UI-->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.3.0</version>
		</dependency>
		<!-- validation of requests -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<!-- Mapper library to automate model transformations DTO <-> Model -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>1.5.5.Final</version>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version> 42.7.7 </version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>


	</dependencies>

	<!-- Nexus repository for EAPLI artifacts -->
	<repositories>
		<repository>
			<id>jitpack.io</id>
			<url>https://jitpack.io</url>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<release>17</release>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>1.18.30</version>
						</path>
						<!-- Mapper library to automate model transformations
						DTO: <-> Model -->
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>1.5.5.Final</version>
						</path>
						<!-- additional annotation processor required as of
						Lombok 1.18.16 -->
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>0.2.0</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok-maven-plugin</artifactId>
				<version>1.18.20.0</version>
				<dependencies>
					<dependency>
						<groupId>org.projectlombok</groupId>
						<artifactId>lombok</artifactId>
						<version>1.18.30</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>delombok</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>delombok</goal>
						</goals>
						<configuration>
							<sourceDirectory>${project.basedir}/src/main/java</sourceDirectory>
							<outputDirectory>${project.build.directory}/delombok</outputDirectory>
							<addOutputDirectory>false</addOutputDirectory>
							<formatPreferences>
								<javaLangAsFQN>skip</javaLangAsFQN>
							</formatPreferences>
							<verbose>false</verbose>
						</configuration>
					</execution>
					<!-- This is for delomboking also your tests sources.
					<execution> <id>test-delombok</id> 
						<phase>generate-test-sources</phase> <goals> <goal>testDelombok</goal> </goals> 
						<configuration> <verbose>false</verbose> </configuration> </execution> -->
				</executions>
			</plugin>
			<!-- test coverage -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>3.2.5</version>
				<configuration>
					<aggregate>true</aggregate>
				</configuration>
				<executions>
					<execution>
						<phase>install</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.11</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>